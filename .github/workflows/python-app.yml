name: Test Python assemblers

on:
  # Trigger tests on push
  push:
    branches:
      - "**"
  schedule:
    # '*' is a special character in YAML, so string must be quoted
    - cron: "0 1 * * *"
jobs:
  build:
    if: "!(contains(github.event.head_commit.message, '[ci skip]') || contains(github.event.head_commit.message, '[skip ci]'))"
    runs-on: ubuntu-20.04
    # container: dolfinx/dolfinx
    # steps:
    #   - uses: actions/checkout@v2
    container: dolfinx/dev-env
    env:
      CC: clang-12
      CXX: clang++-12
      PETSC_ARCH: linux-gnu-real-32
      OMPI_ALLOW_RUN_AS_ROOT: 1
      OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1
      OMPI_MCA_rmaps_base_oversubscribe: 1
      OMPI_MCA_plm: isolated
      OMPI_MCA_btl_vader_single_copy_mechanism: none
      OMPI_MCA_mpi_yield_when_idle: 1
      OMPI_MCA_hwloc_base_binding_policy: none

    steps:
      - uses: actions/checkout@v2

      - name: Get Basix and install
        uses: actions/checkout@v2
        with:
          path: ./basix
          repository: FEniCS/basix
          ref: main

      - name: Install FEniCS Python components (dolfinx)
        run: |
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -B build-basix -S ./basix/cpp
          cmake --build build-basix
          cmake --install build-basix
          python3 -m pip install ./basix/python
          python3 -m pip install git+https://github.com/FEniCS/ufl.git
          python3 -m pip install git+https://github.com/FEniCS/ffcx.git
      - name: Install dolfinx
        uses: actions/checkout@v2
        with:
          path: ./dolfinx
          repository: FEniCS/dolfinx
          ref: main

      - name: Configure C++ (dolfinx)
        run: cmake -G Ninja -DCMAKE_BUILD_TYPE=Developer -B build-dolfinx -S ./dolfinx/cpp/

      - name: Build and install C++ library (dolfinx)
        run: |
          cmake --build build-dolfinx
          cmake --install build-dolfinx

      - name: Build Python interface (dolfinx)
        run: python3 -m pip -v install ./dolfinx/python/

      - name: Install custom assemblers (C++)
        run: |
          cmake -G Ninja -B build-dir -DCMAKE_BUILD_TYPE=Developer cpp/
          ninja -C build-dir install

      - name: Install custom assemblers
        run: python3 -m pip -v install python/

      - name: Flake8 code
        run: flake8 python/

      - name: Run tests
        run: |
          cd python/tests
          python3 -m pytest -vs

      - name: Run demos
        run: |
          cd python/demos
          python3 mass_matrix.py
          python3 stiffness_matrix.py
